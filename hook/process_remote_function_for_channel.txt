void UNetDriver::ProcessRemoteFunctionForChannel(UActorChannel* Ch, const FClassNetCache* ClassCache, const FFieldNetCache* FieldCache, UObject* TargetObj, UNetConnection* Connection, UFunction* Function, void* Parms, FOutParmRec* OutParms, FFrame* Stack, const bool IsServer, const ERemoteFunctionSendPolicy SendPolicy)
{
	// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// This function should be kept fast! Assume this is getting called multiple times at once. Don't look things up/recalc them if they do not change per connection/actor.
	// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	if (Ch->Closing)
	{
		return;
	}

	// Make sure initial channel-opening replication has taken place.
	if( Ch->OpenPacketId.First==INDEX_NONE )
	{
		if (!IsServer)
		{
			DEBUG_REMOTEFUNCTION(TEXT("Initial channel replication has not occurred, not calling %s::%s"), *TargetObj->GetFullName(), *Function->GetName());
			return;
		}

		// triggering replication of an Actor while already in the middle of replication can result in invalid data being sent and is therefore illegal
		if (Ch->bIsReplicatingActor)
		{
			FString Error(FString::Printf(TEXT("Attempt to replicate function '%s' on Actor '%s' while it is in the middle of variable replication!"), *Function->GetName(), *TargetObj->GetFullName()));
			UE_LOG(LogScript, Error, TEXT("%s"), *Error);
			ensureMsgf(false, TEXT("%s"), *Error);
			return;
		}

		// Bump the ReplicationFrame value to invalidate any properties marked as "unchanged" for this frame.
		ReplicationFrame++;
		
		Ch->GetActor()->CallPreReplication(this);
		Ch->ReplicateActor();
	}

	// Clients may be "closing" this connection but still processing bunches, we can't send anything if we have an invalid ChIndex.
	if (Ch->ChIndex == -1)
	{
		ensure(!IsServer);
		return;
	}

	// Form the RPC preamble.
	FOutBunch Bunch( Ch, 0 );

	// Reliability.
	//warning: RPC's might overflow, preventing reliable functions from getting thorough.
	if (Function->FunctionFlags & FUNC_NetReliable)
	{
		Bunch.bReliable = 1;
	}

	// verify we haven't overflowed unacked bunch buffer (Connection is not net ready)
	//@warning: needs to be after parameter evaluation for script stack integrity
	if ( Bunch.IsError() )
	{
		if ( !Bunch.bReliable )
		{
			// Not reliable, so not fatal. This can happen a lot in debug builds at startup if client is slow to get in game
			UE_LOG( LogNet, Warning, TEXT( "Can't send function '%s' on '%s': Reliable buffer overflow. FieldCache->FieldNetIndex: %d Max %d. Ch MaxPacket: %d" ), *Function->GetName(), *TargetObj->GetFullName(), FieldCache->FieldNetIndex, ClassCache->GetMaxIndex(), Ch->Connection->MaxPacket );
		}
		else
		{
			// The connection has overflowed the reliable buffer. We cannot recover from this. Disconnect this user.
			UE_LOG( LogNet, Warning, TEXT( "Closing connection. Can't send function '%s' on '%s': Reliable buffer overflow. FieldCache->FieldNetIndex: %d Max %d. Ch MaxPacket: %d." ), *Function->GetName(), *TargetObj->GetFullName(), FieldCache->FieldNetIndex, ClassCache->GetMaxIndex(), Ch->Connection->MaxPacket );

			FString ErrorMsg = NSLOCTEXT( "NetworkErrors", "ClientReliableBufferOverflow", "Outgoing reliable buffer overflow" ).ToString();
			FNetControlMessage<NMT_Failure>::Send( Connection, ErrorMsg );
			Connection->FlushNet( true );
			Connection->Close();
#if USE_SERVER_PERF_COUNTERS
			PerfCountersIncrement( TEXT( "ClosedConnectionsDueToReliableBufferOverflow" ) );
#endif
		}
		return;
	}

#if !(UE_BUILD_SHIPPING || UE_BUILD_TEST)
	extern TAutoConsoleVariable< int32 > CVarNetReliableDebug;

	if ( CVarNetReliableDebug.GetValueOnAnyThread() > 0 )
	{
		Bunch.DebugString = FString::Printf( TEXT( "%.2f RPC: %s - %s" ), Connection->Driver->GetElapsedTime(), *TargetObj->GetFullName(), *Function->GetName() );
	}
#endif

#if UE_NET_TRACE_ENABLED
	SetTraceCollector(Bunch, UE_NET_TRACE_CREATE_COLLECTOR(ENetTraceVerbosity::Trace));
#endif

	TArray< FProperty * > LocalOutParms;

	if( Stack == nullptr )
	{
		// Look for CPF_OutParm's, we'll need to copy these into the local parameter memory manually
		// The receiving side will pull these back out when needed
		for ( TFieldIterator<FProperty> It(Function); It && (It->PropertyFlags & (CPF_Parm|CPF_ReturnParm))==CPF_Parm; ++It )
		{
			if ( It->HasAnyPropertyFlags( CPF_OutParm ) )
			{
				if ( OutParms == NULL )
				{
					UE_LOG( LogNet, Warning, TEXT( "Missing OutParms. Property: %s, Function: %s, Actor: %s" ), *It->GetName(), *Function->GetName(), *TargetObj->GetFullName() );
					continue;
				}

				FOutParmRec * Out = OutParms;

				checkSlow( Out );

				while ( Out->Property != *It )
				{
					Out = Out->NextOutParm;
					checkSlow( Out );
				}

				void* Dest = It->ContainerPtrToValuePtr< void >( Parms );

				const int32 CopySize = It->ElementSize * It->ArrayDim;

				check( ( (uint8*)Dest - (uint8*)Parms ) + CopySize <= Function->ParmsSize );

				It->CopyCompleteValue( Dest, Out->PropAddr );

				LocalOutParms.Add( *It );
			}
		}
	}

	bool LogAsWarning = (GNetRPCDebug == 1);
	if (LogAsWarning)
	{
		// Suppress spammy engine RPCs. This could be made a configable list in the future.
		if (Function->GetName().Contains(TEXT("ServerUpdateCamera"))) LogAsWarning = false;
		if (Function->GetName().Contains(TEXT("ClientAckGoodMove"))) LogAsWarning = false;
		if (Function->GetName().Contains(TEXT("ServerMove"))) LogAsWarning = false;
	}

	FNetBitWriter TempWriter( Bunch.PackageMap, 0 );

#if UE_NET_TRACE_ENABLED
	// Create trace collector if tracing is enabled for the target bunch
	SetTraceCollector(TempWriter, GetTraceCollector(Bunch) ? UE_NET_TRACE_CREATE_COLLECTOR(ENetTraceVerbosity::Trace) : nullptr);
    ON_SCOPE_EXIT { UE_NET_TRACE_DESTROY_COLLECTOR(GetTraceCollector(TempWriter)); };
#endif // UE_NET_TRACE_ENABLED

	// Use the replication layout to send the rpc parameter values
	TSharedPtr<FRepLayout> RepLayout = GetFunctionRepLayout( Function );
	RepLayout->SendPropertiesForRPC( Function, Ch, TempWriter, Parms );

	if (TempWriter.IsError())
	{
		if (LogAsWarning)
		{
			UE_LOG(LogNet, Warning, TEXT("Error: Can't send function '%s' on '%s': Failed to serialize properties"), *Function->GetName(), *TargetObj->GetFullName());
		}
		else
		{
			UE_LOG(LogNet, Log, TEXT("Error: Can't send function '%s' on '%s': Failed to serialize properties"), *Function->GetName(), *TargetObj->GetFullName());
		}
	}
	else
	{
		// Make sure net field export group is registered
		FNetFieldExportGroup* NetFieldExportGroup = Ch->GetOrCreateNetFieldExportGroupForClassNetCache( TargetObj );

		int32 HeaderBits	= 0;
		int32 ParameterBits	= 0;
		
		bool QueueBunch = false;
		switch (SendPolicy)
		{
			case ERemoteFunctionSendPolicy::Default:
				QueueBunch = ( !Bunch.bReliable && Function->FunctionFlags & FUNC_NetMulticast );
				break;
			case ERemoteFunctionSendPolicy::ForceQueue:
				QueueBunch = true;
				break;
			case ERemoteFunctionSendPolicy::ForceSend:
				QueueBunch = false;
				break;
		}

		if ( QueueBunch )
		{
			Ch->WriteFieldHeaderAndPayload( Bunch, ClassCache, FieldCache, NetFieldExportGroup, TempWriter );
			ParameterBits = Bunch.GetNumBits();
		}
		else
		{
			Ch->PrepareForRemoteFunction(TargetObj);

			FNetBitWriter TempBlockWriter( Bunch.PackageMap, 0 );

#if UE_NET_TRACE_ENABLED
			UE_NET_TRACE_OBJECT_SCOPE(Ch->ActorNetGUID, Bunch, GetTraceCollector(Bunch), ENetTraceVerbosity::Trace);

			// Ugliness to get data reported correctly, we basically fold the data from TempWriter into TempBlockWriter and then to Bunch
			// Create trace collector if tracing is enabled for the target bunch			
			SetTraceCollector(TempBlockWriter, GetTraceCollector(Bunch) ? UE_NET_TRACE_CREATE_COLLECTOR(ENetTraceVerbosity::Trace) : nullptr);
#endif
			
			Ch->WriteFieldHeaderAndPayload( TempBlockWriter, ClassCache, FieldCache, NetFieldExportGroup, TempWriter );
			ParameterBits = TempBlockWriter.GetNumBits();
			HeaderBits = Ch->WriteContentBlockPayload( TargetObj, Bunch, false, TempBlockWriter );

			UE_NET_TRACE_DESTROY_COLLECTOR(GetTraceCollector(TempBlockWriter));
		}

		// Destroy the memory used for the copied out parameters
		for ( int32 i = 0; i < LocalOutParms.Num(); i++ )
		{
			check( LocalOutParms[i]->HasAnyPropertyFlags( CPF_OutParm ) );
			LocalOutParms[i]->DestroyValue_InContainer( Parms );
		}

		// Send the bunch.
		if( Bunch.IsError() )
		{
			UE_LOG(LogNet, Log, TEXT("Error: Can't send function '%s' on '%s': RPC bunch overflowed (too much data in parameters?)"), *Function->GetName(), *TargetObj->GetFullName());
			ensureMsgf(false,TEXT("Error: Can't send function '%s' on '%s': RPC bunch overflowed (too much data in parameters?)"), *Function->GetName(), *TargetObj->GetFullName());
		}
		else if (Ch->Closing)
		{
			UE_LOG(LogNetTraffic, Log, TEXT("RPC bunch on closing channel") );
		}
		else
		{
			// Make sure we're tracking all the bits in the bunch
			check(Bunch.GetNumBits() == HeaderBits + ParameterBits);

			if (QueueBunch)
			{
				// Unreliable multicast functions are queued and sent out during property replication
				if (LogAsWarning)
				{
					UE_LOG(LogNetTraffic, Warning,	TEXT("      Queing unreliable multicast RPC: %s::%s [%.1f bytes]"), *TargetObj->GetFullName(), *Function->GetName(), Bunch.GetNumBits() / 8.f );
				}
				else
				{
					UE_LOG(LogNetTraffic, Log,		TEXT("      Queing unreliable multicast RPC: %s::%s [%.1f bytes]"), *TargetObj->GetFullName(), *Function->GetName(), Bunch.GetNumBits() / 8.f );
				}

				NETWORK_PROFILER(GNetworkProfiler.TrackQueuedRPC(Connection, TargetObj, Ch->Actor, Function, HeaderBits, ParameterBits, 0));
				Ch->QueueRemoteFunctionBunch(TargetObj, Function, Bunch);
			}
			else
			{
				if (LogAsWarning)
				{
					UE_LOG(LogNetTraffic, Warning,	TEXT("      Sent RPC: %s::%s [%.1f bytes]"), *TargetObj->GetFullName(), *Function->GetName(), Bunch.GetNumBits() / 8.f );
				}
				else
				{
					UE_LOG(LogNetTraffic, Log,		TEXT("      Sent RPC: %s::%s [%.1f bytes]"), *TargetObj->GetFullName(), *Function->GetName(), Bunch.GetNumBits() / 8.f );
				}

				NETWORK_PROFILER(GNetworkProfiler.TrackSendRPC(Ch->Actor, Function, HeaderBits, ParameterBits, 0, Connection));
				Ch->SendBunch( &Bunch, 1 );
			}
		}
	}

	if ( Connection->IsInternalAck() )
	{
		Connection->FlushNet();
	}
}

48 8B C4 4C 89 48 20 4C 89 40 18 48 89 50 10 48 89 48 08 55 53 56 48 8D A8 ?? ?? ?? ?? 48 81 EC ?? ?? 00 00 F6 42 30 02

00007FF75EE92070 | 48:8BC4                  | mov rax,rsp                                           |
00007FF75EE92073 | 4C:8948 20               | mov qword ptr ds:[rax+20],r9                          |
00007FF75EE92077 | 4C:8940 18               | mov qword ptr ds:[rax+18],r8                          |
00007FF75EE9207B | 48:8950 10               | mov qword ptr ds:[rax+10],rdx                         |
00007FF75EE9207F | 48:8948 08               | mov qword ptr ds:[rax+8],rcx                          |
00007FF75EE92083 | 55                       | push rbp                                              |
00007FF75EE92084 | 53                       | push rbx                                              |
00007FF75EE92085 | 56                       | push rsi                                              |
00007FF75EE92086 | 48:8DA8 78FDFFFF         | lea rbp,qword ptr ds:[rax-288]                        |
00007FF75EE9208D | 48:81EC 70030000         | sub rsp,370                                           |
00007FF75EE92094 | F642 30 02               | test byte ptr ds:[rdx+30],2                           |
00007FF75EE92098 | 48:8BF2                  | mov rsi,rdx                                           |
00007FF75EE9209B | 48:8BD9                  | mov rbx,rcx                                           |
00007FF75EE9209E | 0F85 FD060000            | jne fsd-win64-shipping.7FF75EE927A1                   |
00007FF75EE920A4 | 837A 38 FF               | cmp dword ptr ds:[rdx+38],FFFFFFFF                    |
00007FF75EE920A8 | 48:8978 E0               | mov qword ptr ds:[rax-20],rdi                         |
00007FF75EE920AC | 0F85 DB000000            | jne fsd-win64-shipping.7FF75EE9218D                   |
00007FF75EE920B2 | 80BD E0020000 00         | cmp byte ptr ss:[rbp+2E0],0                           |
00007FF75EE920B9 | 0F84 DA060000            | je fsd-win64-shipping.7FF75EE92799                    |
00007FF75EE920BF | F682 90000000 04         | test byte ptr ds:[rdx+90],4                           |
00007FF75EE920C6 | 0F84 A7000000            | je fsd-win64-shipping.7FF75EE92173                    |
00007FF75EE920CC | 48:8B8D B0020000         | mov rcx,qword ptr ss:[rbp+2B0]                        |
00007FF75EE920D3 | 48:8D5424 78             | lea rdx,qword ptr ss:[rsp+78]                         |
00007FF75EE920D8 | 45:33C9                  | xor r9d,r9d                                           |
00007FF75EE920DB | 45:33C0                  | xor r8d,r8d                                           |
00007FF75EE920DE | E8 EDAAB7FE              | call fsd-win64-shipping.7FF75DA0CBD0                  |
00007FF75EE920E3 | 48:8D1D 1EBBCE00         | lea rbx,qword ptr ds:[7FF75FB7DC08]                   |
00007FF75EE920EA | 8378 08 00               | cmp dword ptr ds:[rax+8],0                            |
00007FF75EE920EE | 74 05                    | je fsd-win64-shipping.7FF75EE920F5                    |
00007FF75EE920F0 | 48:8B38                  | mov rdi,qword ptr ds:[rax]                            |
00007FF75EE920F3 | EB 03                    | jmp fsd-win64-shipping.7FF75EE920F8                   |
00007FF75EE920F5 | 48:8BFB                  | mov rdi,rbx                                           |
00007FF75EE920F8 | 48:8B85 C0020000         | mov rax,qword ptr ss:[rbp+2C0]                        |
00007FF75EE920FF | 48:8D5424 40             | lea rdx,qword ptr ss:[rsp+40]                         |
00007FF75EE92104 | 48:8B48 18               | mov rcx,qword ptr ds:[rax+18]                         |
00007FF75EE92108 | 48:898D 98020000         | mov qword ptr ss:[rbp+298],rcx                        |
00007FF75EE9210F | 48:8D8D 98020000         | lea rcx,qword ptr ss:[rbp+298]                        |
00007FF75EE92116 | E8 A5389BFE              | call fsd-win64-shipping.7FF75D8459C0                  |
00007FF75EE9211B | 837C24 48 00             | cmp dword ptr ss:[rsp+48],0                           |
00007FF75EE92120 | 48:8D15 69566601         | lea rdx,qword ptr ds:[7FF7604F7790]                   | 00007FF7604F7790:L"Attempt to replicate function '%s' on Actor '%s' while it is in the middle of variable replication!"
00007FF75EE92127 | 4C:8BCF                  | mov r9,rdi                                            |
00007FF75EE9212A | 48:8D4C24 50             | lea rcx,qword ptr ss:[rsp+50]                         |
00007FF75EE9212F | 48:0F455C24 40           | cmovne rbx,qword ptr ss:[rsp+40]                      |
00007FF75EE92135 | 4C:8BC3                  | mov r8,rbx                                            |
00007FF75EE92138 | E8 733687FE              | call fsd-win64-shipping.7FF75D7057B0                  |
00007FF75EE9213D | 48:8B4C24 40             | mov rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE92142 | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE92145 | 74 05                    | je fsd-win64-shipping.7FF75EE9214C                    |
00007FF75EE92147 | E8 04488BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE9214C | 48:8B4C24 78             | mov rcx,qword ptr ss:[rsp+78]                         |
00007FF75EE92151 | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE92154 | 74 05                    | je fsd-win64-shipping.7FF75EE9215B                    |
00007FF75EE92156 | E8 F5478BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE9215B | 48:8B4C24 50             | mov rcx,qword ptr ss:[rsp+50]                         |
00007FF75EE92160 | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE92163 | 0F84 30060000            | je fsd-win64-shipping.7FF75EE92799                    |
00007FF75EE92169 | E8 E2478BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE9216E | E9 26060000              | jmp fsd-win64-shipping.7FF75EE92799                   |
00007FF75EE92173 | FF81 18040000            | inc dword ptr ds:[rcx+418]                            |
00007FF75EE92179 | 48:8BD1                  | mov rdx,rcx                                           |
00007FF75EE9217C | 48:8B4E 70               | mov rcx,qword ptr ds:[rsi+70]                         |
00007FF75EE92180 | E8 5B5CC3FF              | call fsd-win64-shipping.7FF75EAC7DE0                  |
00007FF75EE92185 | 48:8BCE                  | mov rcx,rsi                                           |
00007FF75EE92188 | E8 43A7E1FF              | call fsd-win64-shipping.7FF75ECAC8D0                  |
00007FF75EE9218D | 837E 34 FF               | cmp dword ptr ds:[rsi+34],FFFFFFFF                    |
00007FF75EE92191 | 0F84 02060000            | je fsd-win64-shipping.7FF75EE92799                    |
00007FF75EE92197 | 45:33C0                  | xor r8d,r8d                                           |
00007FF75EE9219A | 48:8D4D A0               | lea rcx,qword ptr ss:[rbp-60]                         |
00007FF75EE9219E | 48:8BD6                  | mov rdx,rsi                                           |
00007FF75EE921A1 | E8 4ABEDFFF              | call fsd-win64-shipping.7FF75EC8DFF0                  |
00007FF75EE921A6 | 48:8BBD C0020000         | mov rdi,qword ptr ss:[rbp+2C0]                        |
00007FF75EE921AD | 0FB685 90000000          | movzx eax,byte ptr ss:[rbp+90]                        |
00007FF75EE921B4 | F687 B0000000 80         | test byte ptr ds:[rdi+B0],80                          |
00007FF75EE921BB | 74 08                    | je fsd-win64-shipping.7FF75EE921C5                    |
00007FF75EE921BD | 0C 20                    | or al,20                                              |
00007FF75EE921BF | 8885 90000000            | mov byte ptr ss:[rbp+90],al                           |
00007FF75EE921C5 | F645 C9 01               | test byte ptr ss:[rbp-37],1                           |
00007FF75EE921C9 | 4C:89A424 60030000       | mov qword ptr ss:[rsp+360],r12                        |
00007FF75EE921D1 | 4C:89B424 50030000       | mov qword ptr ss:[rsp+350],r14                        |
00007FF75EE921D9 | 0F84 E7000000            | je fsd-win64-shipping.7FF75EE922C6                    |
00007FF75EE921DF | A8 20                    | test al,20                                            |
00007FF75EE921E1 | 0F84 99050000            | je fsd-win64-shipping.7FF75EE92780                    |
00007FF75EE921E7 | 4C:8D0D CABF6001         | lea r9,qword ptr ds:[7FF76049E1B8]                    | 00007FF76049E1B8:L"ClientReliableBufferOverflow"
00007FF75EE921EE | 4C:8D05 4B3ECF00         | lea r8,qword ptr ds:[7FF75FB86040]                    | 00007FF75FB86040:L"NetworkErrors"
00007FF75EE921F5 | 48:8D15 04C06001         | lea rdx,qword ptr ds:[7FF76049E200]                   | 00007FF76049E200:L"Outgoing reliable buffer overflow"
00007FF75EE921FC | 48:8D4D 88               | lea rcx,qword ptr ss:[rbp-78]                         |
00007FF75EE92200 | E8 2B3D8BFE              | call fsd-win64-shipping.7FF75D745F30                  |
00007FF75EE92205 | 48:8BC8                  | mov rcx,rax                                           |
00007FF75EE92208 | E8 C3C390FE              | call fsd-win64-shipping.7FF75D79E5D0                  |
00007FF75EE9220D | 45:33F6                  | xor r14d,r14d                                         |
00007FF75EE92210 | 4C:897424 68             | mov qword ptr ss:[rsp+68],r14                         |
00007FF75EE92215 | 48:6358 08               | movsxd rbx,dword ptr ds:[rax+8]                       |
00007FF75EE92219 | 48:8B38                  | mov rdi,qword ptr ds:[rax]                            |
00007FF75EE9221C | 895C24 70                | mov dword ptr ss:[rsp+70],ebx                         |
00007FF75EE92220 | 85DB                     | test ebx,ebx                                          |
00007FF75EE92222 | 75 07                    | jne fsd-win64-shipping.7FF75EE9222B                   |
00007FF75EE92224 | 44:897424 74             | mov dword ptr ss:[rsp+74],r14d                        |
00007FF75EE92229 | EB 22                    | jmp fsd-win64-shipping.7FF75EE9224D                   |
00007FF75EE9222B | 45:33C0                  | xor r8d,r8d                                           |
00007FF75EE9222E | 48:8D4C24 68             | lea rcx,qword ptr ss:[rsp+68]                         |
00007FF75EE92233 | 8BD3                     | mov edx,ebx                                           |
00007FF75EE92235 | E8 0693C6FD              | call fsd-win64-shipping.7FF75CAFB540                  |
00007FF75EE9223A | 48:8B4C24 68             | mov rcx,qword ptr ss:[rsp+68]                         |
00007FF75EE9223F | 4C:8BC3                  | mov r8,rbx                                            |
00007FF75EE92242 | 4D:03C0                  | add r8,r8                                             |
00007FF75EE92245 | 48:8BD7                  | mov rdx,rdi                                           |
00007FF75EE92248 | E8 EC43C300              | call <JMP.&memmove>                                   |
00007FF75EE9224D | 48:8B5D 90               | mov rbx,qword ptr ss:[rbp-70]                         |
00007FF75EE92251 | 48:85DB                  | test rbx,rbx                                          |
00007FF75EE92254 | 74 33                    | je fsd-win64-shipping.7FF75EE92289                    |
00007FF75EE92256 | 41:BC FFFFFFFF           | mov r12d,FFFFFFFF                                     |
00007FF75EE9225C | 41:8BC4                  | mov eax,r12d                                          |
00007FF75EE9225F | F0:0FC143 08             | lock xadd dword ptr ds:[rbx+8],eax                    |
00007FF75EE92264 | 83F8 01                  | cmp eax,1                                             |
00007FF75EE92267 | 75 20                    | jne fsd-win64-shipping.7FF75EE92289                   |
00007FF75EE92269 | 48:8B03                  | mov rax,qword ptr ds:[rbx]                            |
00007FF75EE9226C | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE9226F | FF10                     | call qword ptr ds:[rax]                               |
00007FF75EE92271 | F044:0FC163 0C           | lock xadd dword ptr ds:[rbx+C],r12d                   |
00007FF75EE92277 | 41:83FC 01               | cmp r12d,1                                            |
00007FF75EE9227B | 75 0C                    | jne fsd-win64-shipping.7FF75EE92289                   |
00007FF75EE9227D | 48:8B03                  | mov rax,qword ptr ds:[rbx]                            |
00007FF75EE92280 | 41:8BD4                  | mov edx,r12d                                          |
00007FF75EE92283 | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE92286 | FF50 08                  | call qword ptr ds:[rax+8]                             |
00007FF75EE92289 | 48:8B9D B8020000         | mov rbx,qword ptr ss:[rbp+2B8]                        |
00007FF75EE92290 | 48:8D5424 68             | lea rdx,qword ptr ss:[rsp+68]                         |
00007FF75EE92295 | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE92298 | E8 33F8CDFD              | call fsd-win64-shipping.7FF75CB71AD0                  |
00007FF75EE9229D | 48:8B03                  | mov rax,qword ptr ds:[rbx]                            |
00007FF75EE922A0 | B2 01                    | mov dl,1                                              |
00007FF75EE922A2 | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE922A5 | FF90 A8020000            | call qword ptr ds:[rax+2A8]                           |
00007FF75EE922AB | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE922AE | E8 2DF8FCFF              | call fsd-win64-shipping.7FF75EE61AE0                  |
00007FF75EE922B3 | 48:8B4C24 68             | mov rcx,qword ptr ss:[rsp+68]                         |
00007FF75EE922B8 | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE922BB | 0F84 BF040000            | je fsd-win64-shipping.7FF75EE92780                    |
00007FF75EE922C1 | E9 B5040000              | jmp fsd-win64-shipping.7FF75EE9277B                   |
00007FF75EE922C6 | 45:33F6                  | xor r14d,r14d                                         |
00007FF75EE922C9 | 4C:89AC24 58030000       | mov qword ptr ss:[rsp+358],r13                        |
00007FF75EE922D1 | 4C:89BC24 48030000       | mov qword ptr ss:[rsp+348],r15                        |
00007FF75EE922D9 | 45:8BFE                  | mov r15d,r14d                                         |
00007FF75EE922DC | 4C:897424 40             | mov qword ptr ss:[rsp+40],r14                         |
00007FF75EE922E1 | 44:897424 4C             | mov dword ptr ss:[rsp+4C],r14d                        |
00007FF75EE922E6 | 45:8D66 FF               | lea r12d,qword ptr ds:[r14-1]                         |
00007FF75EE922EA | 4C:39B5 D8020000         | cmp qword ptr ss:[rbp+2D8],r14                        |
00007FF75EE922F1 | 0F85 30010000            | jne fsd-win64-shipping.7FF75EE92427                   |
00007FF75EE922F7 | 48:8B47 50               | mov rax,qword ptr ds:[rdi+50]                         |
00007FF75EE922FB | 48:8D4C24 50             | lea rcx,qword ptr ss:[rsp+50]                         |
00007FF75EE92300 | 48:894424 58             | mov qword ptr ss:[rsp+58],rax                         |
00007FF75EE92305 | 48:897C24 50             | mov qword ptr ss:[rsp+50],rdi                         |
00007FF75EE9230A | 44:896424 60             | mov dword ptr ss:[rsp+60],r12d                        |
00007FF75EE9230F | 66:C74424 64 0101        | mov word ptr ss:[rsp+64],101                          |
00007FF75EE92316 | 44:887424 66             | mov byte ptr ss:[rsp+66],r14b                         |
00007FF75EE9231B | E8 50CFCCFD              | call fsd-win64-shipping.7FF75CB5F270                  |
00007FF75EE92320 | 48:8B5C24 58             | mov rbx,qword ptr ss:[rsp+58]                         |
00007FF75EE92325 | 48:85DB                  | test rbx,rbx                                          |
00007FF75EE92328 | 0F84 F2000000            | je fsd-win64-shipping.7FF75EE92420                    |
00007FF75EE9232E | 4C:8BAD D0020000         | mov r13,qword ptr ss:[rbp+2D0]                        |
00007FF75EE92335 | 41:8BF6                  | mov esi,r14d                                          |
00007FF75EE92338 | 4C:8BA5 C8020000         | mov r12,qword ptr ss:[rbp+2C8]                        |
00007FF75EE9233F | 90                       | nop                                                   |
00007FF75EE92340 | 4C:8B43 40               | mov r8,qword ptr ds:[rbx+40]                          |
00007FF75EE92344 | 49:8BC0                  | mov rax,r8                                            |
00007FF75EE92347 | 25 80040000              | and eax,480                                           |
00007FF75EE9234C | 48:3D 80000000           | cmp rax,80                                            |
00007FF75EE92352 | 0F85 B4000000            | jne fsd-win64-shipping.7FF75EE9240C                   |
00007FF75EE92358 | 49:0FBAE0 08             | bt r8,8                                               |
00007FF75EE9235D | 0F83 88000000            | jae fsd-win64-shipping.7FF75EE923EB                   |
00007FF75EE92363 | 4D:85ED                  | test r13,r13                                          |
00007FF75EE92366 | 0F84 7F000000            | je fsd-win64-shipping.7FF75EE923EB                    |
00007FF75EE9236C | 49:8BC5                  | mov rax,r13                                           |
00007FF75EE9236F | 49:395D 00               | cmp qword ptr ds:[r13],rbx                            |
00007FF75EE92373 | 74 09                    | je fsd-win64-shipping.7FF75EE9237E                    |
00007FF75EE92375 | 48:8B40 10               | mov rax,qword ptr ds:[rax+10]                         |
00007FF75EE92379 | 48:3918                  | cmp qword ptr ds:[rax],rbx                            |
00007FF75EE9237C | 75 F7                    | jne fsd-win64-shipping.7FF75EE92375                   |
00007FF75EE9237E | 48:634B 4C               | movsxd rcx,dword ptr ds:[rbx+4C]                      |
00007FF75EE92382 | 48:8B50 08               | mov rdx,qword ptr ds:[rax+8]                          |
00007FF75EE92386 | 49:03CC                  | add rcx,r12                                           |
00007FF75EE92389 | 48:3BCA                  | cmp rcx,rdx                                           |
00007FF75EE9238C | 74 2E                    | je fsd-win64-shipping.7FF75EE923BC                    |
00007FF75EE9238E | 49:0FBAE0 1E             | bt r8,1E                                              |
00007FF75EE92393 | 73 11                    | jae fsd-win64-shipping.7FF75EE923A6                   |
00007FF75EE92395 | 8B43 3C                  | mov eax,dword ptr ds:[rbx+3C]                         |
00007FF75EE92398 | 0FAF43 38                | imul eax,dword ptr ds:[rbx+38]                        |
00007FF75EE9239C | 4C:63C0                  | movsxd r8,eax                                         |
00007FF75EE9239F | E8 9542C300              | call <JMP.&memmove>                                   |
00007FF75EE923A4 | EB 16                    | jmp fsd-win64-shipping.7FF75EE923BC                   |
00007FF75EE923A6 | 48:8B03                  | mov rax,qword ptr ds:[rbx]                            |
00007FF75EE923A9 | 4C:8BC2                  | mov r8,rdx                                            |
00007FF75EE923AC | 44:8B4B 38               | mov r9d,dword ptr ds:[rbx+38]                         |
00007FF75EE923B0 | 48:8BD1                  | mov rdx,rcx                                           |
00007FF75EE923B3 | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE923B6 | FF90 B0000000            | call qword ptr ds:[rax+B0]                            |
00007FF75EE923BC | 49:63FF                  | movsxd rdi,r15d                                       |
00007FF75EE923BF | 44:8D7F 01               | lea r15d,qword ptr ds:[rdi+1]                         |
00007FF75EE923C3 | 44:897C24 48             | mov dword ptr ss:[rsp+48],r15d                        |
00007FF75EE923C8 | 44:3BFE                  | cmp r15d,esi                                          |
00007FF75EE923CB | 7E 1A                    | jle fsd-win64-shipping.7FF75EE923E7                   |
00007FF75EE923CD | 8BD7                     | mov edx,edi                                           |
00007FF75EE923CF | 48:8D4C24 40             | lea rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE923D4 | E8 6792C6FD              | call fsd-win64-shipping.7FF75CAFB640                  |
00007FF75EE923D9 | 44:8B7C24 48             | mov r15d,dword ptr ss:[rsp+48]                        |
00007FF75EE923DE | 4C:8B7424 40             | mov r14,qword ptr ss:[rsp+40]                         |
00007FF75EE923E3 | 8B7424 4C                | mov esi,dword ptr ss:[rsp+4C]                         |
00007FF75EE923E7 | 49:891CFE                | mov qword ptr ds:[r14+rdi*8],rbx                      |
00007FF75EE923EB | 48:8B43 20               | mov rax,qword ptr ds:[rbx+20]                         |
00007FF75EE923EF | 48:8D4C24 50             | lea rcx,qword ptr ss:[rsp+50]                         |
00007FF75EE923F4 | 48:894424 58             | mov qword ptr ss:[rsp+58],rax                         |
00007FF75EE923F9 | E8 72CECCFD              | call fsd-win64-shipping.7FF75CB5F270                  |
00007FF75EE923FE | 48:8B5C24 58             | mov rbx,qword ptr ss:[rsp+58]                         |
00007FF75EE92403 | 48:85DB                  | test rbx,rbx                                          |
00007FF75EE92406 | 0F85 34FFFFFF            | jne fsd-win64-shipping.7FF75EE92340                   |
00007FF75EE9240C | 48:8BB5 98020000         | mov rsi,qword ptr ss:[rbp+298]                        |
00007FF75EE92413 | 41:BC FFFFFFFF           | mov r12d,FFFFFFFF                                     |
00007FF75EE92419 | 48:8BBD C0020000         | mov rdi,qword ptr ss:[rbp+2C0]                        |
00007FF75EE92420 | 48:8B9D 90020000         | mov rbx,qword ptr ss:[rbp+290]                        |
00007FF75EE92427 | 833D 72FB3402 01         | cmp dword ptr ds:[7FF7611E1FA0],1                     |
00007FF75EE9242E | 0F85 D8000000            | jne fsd-win64-shipping.7FF75EE9250C                   |
00007FF75EE92434 | 48:8B47 18               | mov rax,qword ptr ds:[rdi+18]                         |
00007FF75EE92438 | 48:8D5424 40             | lea rdx,qword ptr ss:[rsp+40]                         |
00007FF75EE9243D | 48:8D8D 98020000         | lea rcx,qword ptr ss:[rbp+298]                        |
00007FF75EE92444 | 48:8985 98020000         | mov qword ptr ss:[rbp+298],rax                        |
00007FF75EE9244B | E8 70359BFE              | call fsd-win64-shipping.7FF75D8459C0                  |
00007FF75EE92450 | 45:33C9                  | xor r9d,r9d                                           |
00007FF75EE92453 | 44:896424 20             | mov dword ptr ss:[rsp+20],r12d                        |
00007FF75EE92458 | 48:8D15 F9536601         | lea rdx,qword ptr ds:[7FF7604F7858]                   | 00007FF7604F7858:L"ServerUpdateCamera"
00007FF75EE9245F | 48:8D4C24 40             | lea rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE92464 | 45:8D41 01               | lea r8d,qword ptr ds:[r9+1]                           |
00007FF75EE92468 | E8 E38486FE              | call fsd-win64-shipping.7FF75D6FA950                  |
00007FF75EE9246D | 48:8B4C24 40             | mov rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE92472 | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE92475 | 74 05                    | je fsd-win64-shipping.7FF75EE9247C                    |
00007FF75EE92477 | E8 D4448BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE9247C | 48:8B47 18               | mov rax,qword ptr ds:[rdi+18]                         |
00007FF75EE92480 | 48:8D5424 40             | lea rdx,qword ptr ss:[rsp+40]                         |
00007FF75EE92485 | 48:8D8D 98020000         | lea rcx,qword ptr ss:[rbp+298]                        |
00007FF75EE9248C | 48:8985 98020000         | mov qword ptr ss:[rbp+298],rax                        |
00007FF75EE92493 | E8 28359BFE              | call fsd-win64-shipping.7FF75D8459C0                  |
00007FF75EE92498 | 45:33C9                  | xor r9d,r9d                                           |
00007FF75EE9249B | 44:896424 20             | mov dword ptr ss:[rsp+20],r12d                        |
00007FF75EE924A0 | 48:8D15 D9536601         | lea rdx,qword ptr ds:[7FF7604F7880]                   | 00007FF7604F7880:L"ClientAckGoodMove"
00007FF75EE924A7 | 48:8D4C24 40             | lea rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE924AC | 45:8D41 01               | lea r8d,qword ptr ds:[r9+1]                           |
00007FF75EE924B0 | E8 9B8486FE              | call fsd-win64-shipping.7FF75D6FA950                  |
00007FF75EE924B5 | 48:8B4C24 40             | mov rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE924BA | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE924BD | 74 05                    | je fsd-win64-shipping.7FF75EE924C4                    |
00007FF75EE924BF | E8 8C448BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE924C4 | 48:8B47 18               | mov rax,qword ptr ds:[rdi+18]                         |
00007FF75EE924C8 | 48:8D5424 40             | lea rdx,qword ptr ss:[rsp+40]                         |
00007FF75EE924CD | 48:8D8D 98020000         | lea rcx,qword ptr ss:[rbp+298]                        |
00007FF75EE924D4 | 48:8985 98020000         | mov qword ptr ss:[rbp+298],rax                        |
00007FF75EE924DB | E8 E0349BFE              | call fsd-win64-shipping.7FF75D8459C0                  |
00007FF75EE924E0 | 45:33C9                  | xor r9d,r9d                                           |
00007FF75EE924E3 | 44:896424 20             | mov dword ptr ss:[rsp+20],r12d                        |
00007FF75EE924E8 | 48:8D15 B9536601         | lea rdx,qword ptr ds:[7FF7604F78A8]                   | 00007FF7604F78A8:L"ServerMove"
00007FF75EE924EF | 48:8D4C24 40             | lea rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE924F4 | 45:8D41 01               | lea r8d,qword ptr ds:[r9+1]                           |
00007FF75EE924F8 | E8 538486FE              | call fsd-win64-shipping.7FF75D6FA950                  |
00007FF75EE924FD | 48:8B4C24 40             | mov rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE92502 | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE92505 | 74 05                    | je fsd-win64-shipping.7FF75EE9250C                    |
00007FF75EE92507 | E8 44448BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE9250C | 48:8B55 58               | mov rdx,qword ptr ss:[rbp+58]                         |
00007FF75EE92510 | 48:8D8D C0000000         | lea rcx,qword ptr ss:[rbp+C0]                         |
00007FF75EE92517 | 45:33C0                  | xor r8d,r8d                                           |
00007FF75EE9251A | E8 81C0A2FE              | call fsd-win64-shipping.7FF75D8BE5A0                  |
00007FF75EE9251F | 4C:8BC7                  | mov r8,rdi                                            |
00007FF75EE92522 | 48:8D5424 40             | lea rdx,qword ptr ss:[rsp+40]                         |
00007FF75EE92527 | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE9252A | E8 215FFFFF              | call fsd-win64-shipping.7FF75EE88450                  |
00007FF75EE9252F | 48:8B85 C8020000         | mov rax,qword ptr ss:[rbp+2C8]                        |
00007FF75EE92536 | 4C:8D8D C0000000         | lea r9,qword ptr ss:[rbp+C0]                          |
00007FF75EE9253D | 48:8B4C24 40             | mov rcx,qword ptr ss:[rsp+40]                         |
00007FF75EE92542 | 4C:8BC6                  | mov r8,rsi                                            |
00007FF75EE92545 | 48:8BD7                  | mov rdx,rdi                                           |
00007FF75EE92548 | 48:894424 20             | mov qword ptr ss:[rsp+20],rax                         |
00007FF75EE9254D | E8 5EF31500              | call fsd-win64-shipping.7FF75EFF18B0                  |
00007FF75EE92552 | F685 E9000000 01         | test byte ptr ss:[rbp+E9],1                           |
00007FF75EE92559 | 0F85 9D010000            | jne fsd-win64-shipping.7FF75EE926FC                   |
00007FF75EE9255F | 4C:8BAD B0020000         | mov r13,qword ptr ss:[rbp+2B0]                        |
00007FF75EE92566 | 48:8BCE                  | mov rcx,rsi                                           |
00007FF75EE92569 | 49:8BD5                  | mov rdx,r13                                           |
00007FF75EE9256C | E8 BFC4E0FF              | call fsd-win64-shipping.7FF75EC9EA30                  |
00007FF75EE92571 | 8B95 E8020000            | mov edx,dword ptr ss:[rbp+2E8]                        |
00007FF75EE92577 | 48:8BD8                  | mov rbx,rax                                           |
00007FF75EE9257A | 85D2                     | test edx,edx                                          |
00007FF75EE9257C | 0F84 0E010000            | je fsd-win64-shipping.7FF75EE92690                    |
00007FF75EE92582 | 83EA 01                  | sub edx,1                                             |
00007FF75EE92585 | 74 09                    | je fsd-win64-shipping.7FF75EE92590                    |
00007FF75EE92587 | 83FA 01                  | cmp edx,1                                             |
00007FF75EE9258A | 0F84 1D010000            | je fsd-win64-shipping.7FF75EE926AD                    |
00007FF75EE92590 | 49:8BD5                  | mov rdx,r13                                           |
00007FF75EE92593 | 48:8BCE                  | mov rcx,rsi                                           |
00007FF75EE92596 | E8 9530E1FF              | call fsd-win64-shipping.7FF75ECA5630                  |
00007FF75EE9259B | 48:8B55 58               | mov rdx,qword ptr ss:[rbp+58]                         |
00007FF75EE9259F | 48:8D8D 80010000         | lea rcx,qword ptr ss:[rbp+180]                        |
00007FF75EE925A6 | 45:33C0                  | xor r8d,r8d                                           |
00007FF75EE925A9 | E8 F2BFA2FE              | call fsd-win64-shipping.7FF75D8BE5A0                  |
00007FF75EE925AE | 4C:8B8D A8020000         | mov r9,qword ptr ss:[rbp+2A8]                         |
00007FF75EE925B5 | 48:8D85 C0000000         | lea rax,qword ptr ss:[rbp+C0]                         |
00007FF75EE925BC | 4C:8B85 A0020000         | mov r8,qword ptr ss:[rbp+2A0]                         |
00007FF75EE925C3 | 48:8D95 80010000         | lea rdx,qword ptr ss:[rbp+180]                        |
00007FF75EE925CA | C64424 30 00             | mov byte ptr ss:[rsp+30],0                            |
00007FF75EE925CF | 48:8BCE                  | mov rcx,rsi                                           |
00007FF75EE925D2 | 48:894424 28             | mov qword ptr ss:[rsp+28],rax                         |
00007FF75EE925D7 | 48:895C24 20             | mov qword ptr ss:[rsp+20],rbx                         |
00007FF75EE925DC | E8 2F34E2FF              | call fsd-win64-shipping.7FF75ECB5A10                  |
00007FF75EE925E1 | 48:8D85 80010000         | lea rax,qword ptr ss:[rbp+180]                        |
00007FF75EE925E8 | 45:33C9                  | xor r9d,r9d                                           |
00007FF75EE925EB | 4C:8D45 A0               | lea r8,qword ptr ss:[rbp-60]                          |
00007FF75EE925EF | 48:894424 20             | mov qword ptr ss:[rsp+20],rax                         |
00007FF75EE925F4 | 49:8BD5                  | mov rdx,r13                                           |
00007FF75EE925F7 | 48:8BCE                  | mov rcx,rsi                                           |
00007FF75EE925FA | E8 0133E2FF              | call fsd-win64-shipping.7FF75ECB5900                  |
00007FF75EE925FF | 48:8B8D 10020000         | mov rcx,qword ptr ss:[rbp+210]                        |
00007FF75EE92606 | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE92609 | 74 05                    | je fsd-win64-shipping.7FF75EE92610                    |
00007FF75EE9260B | E8 40438BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE92610 | 48:8D8D 80010000         | lea rcx,qword ptr ss:[rbp+180]                        |
00007FF75EE92617 | E8 C4C299FE              | call fsd-win64-shipping.7FF75D82E8E0                  |
00007FF75EE9261C | 45:32E4                  | xor r12b,r12b                                         |
00007FF75EE9261F | 45:85FF                  | test r15d,r15d                                        |
00007FF75EE92622 | 7E 3F                    | jle fsd-win64-shipping.7FF75EE92663                   |
00007FF75EE92624 | 41:8BFF                  | mov edi,r15d                                          |
00007FF75EE92627 | 49:8BDE                  | mov rbx,r14                                           |
00007FF75EE9262A | 4C:8BBD C8020000         | mov r15,qword ptr ss:[rbp+2C8]                        |
00007FF75EE92631 | 48:8B0B                  | mov rcx,qword ptr ds:[rbx]                            |
00007FF75EE92634 | 48:8B41 40               | mov rax,qword ptr ds:[rcx+40]                         |
00007FF75EE92638 | 48:C1E8 24               | shr rax,24                                            |
00007FF75EE9263C | F6D0                     | not al                                                |
00007FF75EE9263E | A8 01                    | test al,1                                             |
00007FF75EE92640 | 74 10                    | je fsd-win64-shipping.7FF75EE92652                    |
00007FF75EE92642 | 48:6351 4C               | movsxd rdx,dword ptr ds:[rcx+4C]                      |
00007FF75EE92646 | 48:8B01                  | mov rax,qword ptr ds:[rcx]                            |
00007FF75EE92649 | 49:03D7                  | add rdx,r15                                           |
00007FF75EE9264C | FF90 E8000000            | call qword ptr ds:[rax+E8]                            |
00007FF75EE92652 | 48:83C3 08               | add rbx,8                                             |
00007FF75EE92656 | 48:83EF 01               | sub rdi,1                                             |
00007FF75EE9265A | 75 D5                    | jne fsd-win64-shipping.7FF75EE92631                   |
00007FF75EE9265C | 48:8BBD C0020000         | mov rdi,qword ptr ss:[rbp+2C0]                        |
00007FF75EE92663 | F645 C9 01               | test byte ptr ss:[rbp-37],1                           |
00007FF75EE92667 | 0F85 8F000000            | jne fsd-win64-shipping.7FF75EE926FC                   |
00007FF75EE9266D | F646 30 02               | test byte ptr ds:[rsi+30],2                           |
00007FF75EE92671 | 0F85 85000000            | jne fsd-win64-shipping.7FF75EE926FC                   |
00007FF75EE92677 | 48:8BCE                  | mov rcx,rsi                                           |
00007FF75EE9267A | 45:84E4                  | test r12b,r12b                                        |
00007FF75EE9267D | 74 66                    | je fsd-win64-shipping.7FF75EE926E5                    |
00007FF75EE9267F | 4C:8D4D A0               | lea r9,qword ptr ss:[rbp-60]                          |
00007FF75EE92683 | 4C:8BC7                  | mov r8,rdi                                            |
00007FF75EE92686 | 49:8BD5                  | mov rdx,r13                                           |
00007FF75EE92689 | E8 E245E1FF              | call fsd-win64-shipping.7FF75ECA6C70                  |
00007FF75EE9268E | EB 6C                    | jmp fsd-win64-shipping.7FF75EE926FC                   |
00007FF75EE92690 | F685 90000000 20         | test byte ptr ss:[rbp+90],20                          |
00007FF75EE92697 | 0F85 F3FEFFFF            | jne fsd-win64-shipping.7FF75EE92590                   |
00007FF75EE9269D | F787 B0000000 00400000   | test dword ptr ds:[rdi+B0],4000                       |
00007FF75EE926A7 | 0F84 E3FEFFFF            | je fsd-win64-shipping.7FF75EE92590                    |
00007FF75EE926AD | 4C:8B8D A8020000         | mov r9,qword ptr ss:[rbp+2A8]                         |
00007FF75EE926B4 | 48:8D85 C0000000         | lea rax,qword ptr ss:[rbp+C0]                         |
00007FF75EE926BB | 4C:8B85 A0020000         | mov r8,qword ptr ss:[rbp+2A0]                         |
00007FF75EE926C2 | 48:8D55 A0               | lea rdx,qword ptr ss:[rbp-60]                         |
00007FF75EE926C6 | C64424 30 00             | mov byte ptr ss:[rsp+30],0                            |
00007FF75EE926CB | 48:8BCE                  | mov rcx,rsi                                           |
00007FF75EE926CE | 48:894424 28             | mov qword ptr ss:[rsp+28],rax                         |
00007FF75EE926D3 | 48:895C24 20             | mov qword ptr ss:[rsp+20],rbx                         |
00007FF75EE926D8 | E8 3333E2FF              | call fsd-win64-shipping.7FF75ECB5A10                  |
00007FF75EE926DD | 41:B4 01                 | mov r12b,1                                            |
00007FF75EE926E0 | E9 3AFFFFFF              | jmp fsd-win64-shipping.7FF75EE9261F                   |
00007FF75EE926E5 | 48:8B06                  | mov rax,qword ptr ds:[rsi]                            |
00007FF75EE926E8 | 4C:8D45 A0               | lea r8,qword ptr ss:[rbp-60]                          |
00007FF75EE926EC | 41:B1 01                 | mov r9b,1                                             |
00007FF75EE926EF | 48:8D95 98020000         | lea rdx,qword ptr ss:[rbp+298]                        |
00007FF75EE926F6 | FF90 C8020000            | call qword ptr ds:[rax+2C8]                           |
00007FF75EE926FC | 48:8B8D B8020000         | mov rcx,qword ptr ss:[rbp+2B8]                        |
00007FF75EE92703 | 4C:8BBC24 48030000       | mov r15,qword ptr ss:[rsp+348]                        |
00007FF75EE9270B | 4C:8BAC24 58030000       | mov r13,qword ptr ss:[rsp+358]                        |
00007FF75EE92713 | 8B81 A4000000            | mov eax,dword ptr ds:[rcx+A4]                         |
00007FF75EE92719 | D1E8                     | shr eax,1                                             |
00007FF75EE9271B | A8 01                    | test al,1                                             |
00007FF75EE9271D | 74 0B                    | je fsd-win64-shipping.7FF75EE9272A                    |
00007FF75EE9271F | 48:8B01                  | mov rax,qword ptr ds:[rcx]                            |
00007FF75EE92722 | 33D2                     | xor edx,edx                                           |
00007FF75EE92724 | FF90 A8020000            | call qword ptr ds:[rax+2A8]                           |
00007FF75EE9272A | 48:8B5C24 48             | mov rbx,qword ptr ss:[rsp+48]                         |
00007FF75EE9272F | 48:85DB                  | test rbx,rbx                                          |
00007FF75EE92732 | 74 22                    | je fsd-win64-shipping.7FF75EE92756                    |
00007FF75EE92734 | 836B 08 01               | sub dword ptr ds:[rbx+8],1                            |
00007FF75EE92738 | 75 1C                    | jne fsd-win64-shipping.7FF75EE92756                   |
00007FF75EE9273A | 48:8B03                  | mov rax,qword ptr ds:[rbx]                            |
00007FF75EE9273D | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE92740 | FF10                     | call qword ptr ds:[rax]                               |
00007FF75EE92742 | 836B 0C 01               | sub dword ptr ds:[rbx+C],1                            |
00007FF75EE92746 | 75 0E                    | jne fsd-win64-shipping.7FF75EE92756                   |
00007FF75EE92748 | 48:8B03                  | mov rax,qword ptr ds:[rbx]                            |
00007FF75EE9274B | BA 01000000              | mov edx,1                                             |
00007FF75EE92750 | 48:8BCB                  | mov rcx,rbx                                           |
00007FF75EE92753 | FF50 08                  | call qword ptr ds:[rax+8]                             |
00007FF75EE92756 | 48:8B8D 50010000         | mov rcx,qword ptr ss:[rbp+150]                        |
00007FF75EE9275D | 48:85C9                  | test rcx,rcx                                          |
00007FF75EE92760 | 74 05                    | je fsd-win64-shipping.7FF75EE92767                    |
00007FF75EE92762 | E8 E9418BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE92767 | 48:8D8D C0000000         | lea rcx,qword ptr ss:[rbp+C0]                         |
00007FF75EE9276E | E8 6DC199FE              | call fsd-win64-shipping.7FF75D82E8E0                  |
00007FF75EE92773 | 4D:85F6                  | test r14,r14                                          |
00007FF75EE92776 | 74 08                    | je fsd-win64-shipping.7FF75EE92780                    |
00007FF75EE92778 | 49:8BCE                  | mov rcx,r14                                           |
00007FF75EE9277B | E8 D0418BFE              | call fsd-win64-shipping.7FF75D746950                  |
00007FF75EE92780 | 48:8D4D A0               | lea rcx,qword ptr ss:[rbp-60]                         |
00007FF75EE92784 | E8 17D4DFFF              | call fsd-win64-shipping.7FF75EC8FBA0                  |
00007FF75EE92789 | 4C:8BB424 50030000       | mov r14,qword ptr ss:[rsp+350]                        |
00007FF75EE92791 | 4C:8BA424 60030000       | mov r12,qword ptr ss:[rsp+360]                        |
00007FF75EE92799 | 48:8BBC24 68030000       | mov rdi,qword ptr ss:[rsp+368]                        |
00007FF75EE927A1 | 48:81C4 70030000         | add rsp,370                                           |
00007FF75EE927A8 | 5E                       | pop rsi                                               |
00007FF75EE927A9 | 5B                       | pop rbx                                               |
00007FF75EE927AA | 5D                       | pop rbp                                               |
00007FF75EE927AB | C3                       | ret                                                   |